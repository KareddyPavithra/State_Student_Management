/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package state_student_management.EnterpriseAdmin;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HealthEnterprise;
import Business.Enterprise.LibraryEnterprise;
import Business.Enterprise.TransportEnterprise;
import Business.Enterprise.UniversityEnterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import Business.Role.ArtsCollegeAdminRole;
import Business.Role.BooksManagerRole;
import Business.Role.BusManagerRole;
import Business.Role.DoctorRole;
import Business.Role.EngineeringCollegeAdminRole;
import Business.Role.HospitalManagerRole;
import Business.Role.ITSEmployeeRole;
import Business.Role.ITSManagerRole;
import Business.Role.LocoEngineerRole;
import Business.Role.MedicalCollegeAdminRole;
import Business.Role.PharmaManagerRole;
import Business.Role.ProfessorRole;
import Business.Role.Role;
import Business.Role.TrainManagerRole;
import Business.Student.Student;
import Business.UserAccount.UserAccount;
import Business.UserAccount.UserAccountDirectory;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhaveshraja
 */
public class EnterpriseAdminDashboard extends javax.swing.JPanel {

    /**
     * Creates new form EnterpriseAdminDashboard
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private OrganizationDirectory organizationDirectory;
    private EcoSystem ecosystem;
    private Network network;
    private DB4OUtil dB4OUtil;
    DefaultTableModel model, sdt;
    DefaultTableModel model1;
    DefaultTableModel dtm;
    
    public EnterpriseAdminDashboard(JPanel userProcessContainer,EcoSystem ecosystem,Enterprise enterprise, OrganizationDirectory organizationDirectory, Network network) {
        
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise=enterprise;
        this.organizationDirectory = organizationDirectory;
        this.ecosystem = ecosystem;
        this.network = network;
        dB4OUtil = DB4OUtil.getInstance();
        txtRole.setText("Enterprise Admin");
        txtRole.setEditable(false);
        model = (DefaultTableModel) tblOrganization.getModel();
        model1 = (DefaultTableModel) tableEmployee.getModel();
        dtm = (DefaultTableModel) tblAdmissionApplications.getModel();
        populateTable();
        populateComboBox();
        populateEmployeeTable();
        //populateAdmissionTable();
        //populateEmployeeRoleComboBox();
        populateOrganizationEmployeeComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProfessorDirectoryPane = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrganization = new javax.swing.JTable();
        btnAddOrg = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        boxOrganization = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnAddEmployee = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableEmployee = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        orgTypeComboBox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        orgEmpRoleComboBox = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        txtEmpName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        btnDelete3 = new javax.swing.JButton();
        txtUser = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        txtContact = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblAdmissionApplications = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        txtRole = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        ProfessorDirectoryPane.setBackground(new java.awt.Color(255, 255, 255));
        ProfessorDirectoryPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProfessorDirectoryPaneMouseClicked(evt);
            }
        });
        ProfessorDirectoryPane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ProfessorDirectoryPaneKeyPressed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel6.setText("Add Organization");

        tblOrganization.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Org ID", "Org Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrganization);

        btnAddOrg.setBackground(new java.awt.Color(201, 3, 3));
        btnAddOrg.setForeground(new java.awt.Color(255, 255, 255));
        btnAddOrg.setText("Add Organization");
        btnAddOrg.setBorder(null);
        btnAddOrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrgActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(245, 1, 1));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setBorder(null);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel12.setText("Organizations");

        jLabel8.setText("Choose Organization Type");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(btnAddOrg, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addComponent(jLabel8)
                    .addComponent(boxOrganization, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(67, 67, 67)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel12))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(boxOrganization, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnAddOrg, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        ProfessorDirectoryPane.addTab("Manage Organizations", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        btnAddEmployee.setBackground(new java.awt.Color(201, 3, 3));
        btnAddEmployee.setForeground(new java.awt.Color(255, 255, 255));
        btnAddEmployee.setText("Add Employee");
        btnAddEmployee.setBorder(null);
        btnAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmployeeActionPerformed(evt);
            }
        });

        tableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization", "Employee Type", "Employee Name", "Contact", "Username", "Password"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tableEmployee);

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel10.setText("Add Employee");

        jLabel13.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel13.setText("Employees");

        orgTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgTypeComboBoxActionPerformed(evt);
            }
        });

        jLabel11.setText("Organization Type");

        jLabel14.setText("Employee Name");

        jLabel15.setText("EmployeeType");

        btnDelete3.setBackground(new java.awt.Color(245, 1, 1));
        btnDelete3.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete3.setText("Delete");
        btnDelete3.setBorder(null);
        btnDelete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete3ActionPerformed(evt);
            }
        });

        jLabel16.setText("Username");

        jLabel17.setText("Password");

        jLabel19.setText("Contact");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmpName)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(orgEmpRoleComboBox, 0, 291, Short.MAX_VALUE)
                    .addComponent(orgTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtUser)
                    .addComponent(jLabel16)
                    .addComponent(btnAddEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17)
                    .addComponent(txtPassword)
                    .addComponent(jLabel19)
                    .addComponent(txtContact))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGap(527, 527, 527)
                                .addComponent(btnDelete3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(jLabel13)))
                        .addContainerGap(60, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13))
                .addGap(17, 17, 17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orgTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(orgEmpRoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel14)
                        .addGap(8, 8, 8)
                        .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel19)
                        .addGap(8, 8, 8)
                        .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16)
                        .addGap(8, 8, 8)
                        .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addGap(4, 4, 4)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(90, 90, 90))
        );

        ProfessorDirectoryPane.addTab("Manage Employee", jPanel4);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel18.setText("Admission Applications");

        tblAdmissionApplications.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Email", "Gender", "Age", "GRE", "IELTS", "Address", "University", "College"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblAdmissionApplications);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 964, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel18)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(257, Short.MAX_VALUE))
        );

        ProfessorDirectoryPane.addTab("Admissions Applications", jPanel8);

        jPanel2.setBackground(new java.awt.Color(201, 3, 3));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SSM.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        btnLogout.setForeground(new java.awt.Color(138, 138, 138));
        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Role");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(43, 43, 43))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ProfessorDirectoryPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(ProfessorDirectoryPane)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddOrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrgActionPerformed
        // TODO add your handling code here:'
        Type type = (Type) boxOrganization.getSelectedItem();
        organizationDirectory.createOrganization(type);
        populateTable();
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_btnAddOrgActionPerformed

    private void btnAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmployeeActionPerformed
        // TODO add your handling code here:
        Organization organization = (Organization) orgTypeComboBox.getSelectedItem();
        
        UserAccountDirectory useraccountdirectory = organization.getUserAccountDirectory();
        String name = txtEmpName.getText();
        String contact = txtContact.getText();
        String username = txtUser.getText();
        String password = String.valueOf(txtPassword.getPassword());

        String empRole = orgEmpRoleComboBox.getSelectedItem().toString();
        
        int n = 0;
        Role role = null;
        
        switch (empRole) {
            
            case "EngineeringCollegeAdmin":
                
                n = 2;
                role = new EngineeringCollegeAdminRole();
                break;
            
            case "ArtsCollegeAdmin":
                
                n = 3;
                role = new ArtsCollegeAdminRole();
                break;
                
            case "MedicalCollegeAdmin":
                
                n = 4;
                role = new MedicalCollegeAdminRole();
                break;
                
            case "Professor":
                
                n = 5;
                role = new ProfessorRole();
                break;
                
            case "Doctor":
                
                n = 6;
                role = new DoctorRole();
                break;
            
            case "HospitalManager":
                
                n = 7;
                role = new HospitalManagerRole();
                break;
                
            case "PharmaManager":
                
                n = 8;
                role = new PharmaManagerRole();
                break;
                
            case "BusManager":
                
                n = 9;
                role = new BusManagerRole();
                break;
                
            case "TrainManager":
                
                n = 10;
                role = new TrainManagerRole();
                break;
                
            case "LocoEngineer":
                
                n = 11;
                role = new LocoEngineerRole();
                break;
                
            case "ITSManager":
                
                n = 12;
                role = new ITSManagerRole();
                break;
                
            case "ITSEmployee":
                
                n = 13;
                role = new ITSEmployeeRole();
                break;
                
            case "BooksManager":
                
                n = 14;
                role = new BooksManagerRole();
                break;
                
        }
        
        for(Employee employee : organization.getEmployeeDirectory().getEmployeeList()){
            if(employee.getName().equals(name)){
                JOptionPane.showMessageDialog(null, "please input another name");
                return;
            }
        }
        
        ArrayList<String>usernamecheck = new ArrayList<>();
        for(UserAccount user: organization.getUserAccountDirectory().getUserAccountList())
        {
            usernamecheck.add(user.getUsername());
            
        }
        if(usernamecheck.contains(username))
        {
            JOptionPane.showMessageDialog(null,"UserName already exists");
            return;
        }
        if(username.isEmpty()||password.isEmpty())
        {
         JOptionPane.showMessageDialog(null,"Please enter a Valid input");
            return;   
        }
        
        if(!validUsername(username)){
            JOptionPane.showMessageDialog(null,"Please enter a Valid username");
            return; 
        }
        
        if(!validPassword(password)){
            JOptionPane.showMessageDialog(null,"Please enter a Valid password with more than 8 characters, 1 number, 1 capital letter and 1 special character");
            return; 
        }
        
       // System.out.println(role);
        Employee employee = organization.getEmployeeDirectory().createEmployee(name,n);
        employee.setMobile(contact);
        //System.out.println(employee.getRole());
        UserAccount userAccount = organization.getUserAccountDirectory().createEmployeeAccount(username, password, contact, employee, role);


        populateEmployeeTable();
        orgEmpRoleComboBox.setSelectedIndex(0);
        orgTypeComboBox.setSelectedIndex(0);
        txtEmpName.setText("");
        txtContact.setText("");
        txtUser.setText("");
        txtPassword.setText("");
        
   
    }//GEN-LAST:event_btnAddEmployeeActionPerformed

    private void orgTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgTypeComboBoxActionPerformed
        // TODO add your handling code here:
        String org =  orgTypeComboBox.getSelectedItem().toString();
        populateEmployeeRoleComboBox(org);
    }//GEN-LAST:event_orgTypeComboBoxActionPerformed

    private void btnDelete3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete3ActionPerformed
        // TODO add your handling code here:
        int row = tableEmployee.getSelectedRow();

        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a employee!!", "Select employee", 2);
            return;
        }

        String username = tableEmployee.getValueAt(row, 4).toString();
        String empType = tableEmployee.getValueAt(row, 1).toString();
        String orgName = tableEmployee.getValueAt(row, 0).toString();

        for (Organization org : organizationDirectory.getOrganizationList()) {

            if (!org.getName().equalsIgnoreCase(orgName)) {
                continue;
            }

            for(Organization organization : organizationDirectory.getOrganizationList())
            {
                UserAccount deleteAccount = null;
                
                for (UserAccount userAccount : enterprise.getUserAccountDirectory().getUserAccountList())
                {

                    if (userAccount.getUsername().equalsIgnoreCase(username))
                    {
                        deleteAccount = userAccount;
                        break;
                    }
                }
                if(deleteAccount != null){
                    enterprise.getUserAccountDirectory().getUserAccountList().remove(deleteAccount);
                    JOptionPane.showMessageDialog(this, "Employee deleted successfully" ,"User deleted", 1);
                    populateEmployeeTable();
                    return;
                }
            }
        }
        dB4OUtil.storeSystem(ecosystem);

    }//GEN-LAST:event_btnDelete3ActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.next(userProcessContainer);
        dB4OUtil.storeSystem(ecosystem);
        
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void ProfessorDirectoryPaneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProfessorDirectoryPaneKeyPressed
        // TODO add your handling code here:
        populateOrganizationEmployeeComboBox();
        
        
    }//GEN-LAST:event_ProfessorDirectoryPaneKeyPressed

    private void ProfessorDirectoryPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfessorDirectoryPaneMouseClicked
        // TODO add your handling code here:
        populateAdmissionTable();
        
    }//GEN-LAST:event_ProfessorDirectoryPaneMouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void populateComboBox()
    {
        boxOrganization.removeAllItems();
        for (Organization.Type type : Organization.Type.values()){
            System.out.println(enterprise);
            if (!type.getValue().equals(Organization.Type.Admin))
            {
                if(enterprise instanceof UniversityEnterprise)
                {
                    
                     boxOrganization.addItem(Organization.Type.EngineeringCollege);
                     boxOrganization.addItem(Organization.Type.ArtsCollege);
                     boxOrganization.addItem(Organization.Type.MedicalCollege);
                     break;
                }
                else if(enterprise instanceof HealthEnterprise)
                {
                    
                     boxOrganization.addItem(Organization.Type.Hospital);
                     boxOrganization.addItem(Organization.Type.Pharma);
                     break;
                    
                }
                else if(enterprise instanceof LibraryEnterprise)
                {
                     boxOrganization.addItem(Organization.Type.ITS);
                     boxOrganization.addItem(Organization.Type.Books);
                     break;
                }
                else if(enterprise instanceof TransportEnterprise)
                {
                     boxOrganization.addItem(Organization.Type.Bus);
                     boxOrganization.addItem(Organization.Type.Train);
                     break;
                }
                  
            }
        }
    }
    
    private void populateTable(){
         
        model.setRowCount(0);
        
        for (Organization organization : organizationDirectory.getOrganizationList()){
            
            Object[] obj = {organization.getOrganizationID(), organization.getName()};
            model.addRow(obj);
        }
    }
    
    public void populateAdmissionTable() {
        dtm.setRowCount(0);
        
        System.out.println(network.getStudentDirectory().getStudentList().size());
        
        for (Student student : this.network.getStudentDirectory().getStudentList()) {
            
            Object obj[] = {student.getId(), student.getName(), student.getEmailId(),student.getGender(),student.getAge(),student.getGRE(),student.getIELTS(),student.getUserName(),student.getPassword(),student.getMobile()};        
            dtm.addRow(obj);
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane ProfessorDirectoryPane;
    private javax.swing.JComboBox boxOrganization;
    private javax.swing.JButton btnAddEmployee;
    private javax.swing.JButton btnAddOrg;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDelete3;
    private javax.swing.JButton btnLogout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JComboBox orgEmpRoleComboBox;
    private javax.swing.JComboBox orgTypeComboBox;
    private javax.swing.JTable tableEmployee;
    private javax.swing.JTable tblAdmissionApplications;
    private javax.swing.JTable tblOrganization;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtRole;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
    
    public void populateEmployeeRoleComboBox(String org) {
                
        orgEmpRoleComboBox.removeAllItems();

        System.out.println(org);
        System.out.println(enterprise);

        if (this.enterprise instanceof UniversityEnterprise) {
            
            System.out.println(enterprise);
            
            if(org.equals("EngineeringCollege Organization")){
                
                System.out.println("org");
           
                orgEmpRoleComboBox.addItem("EngineeringCollegeAdmin");
                orgEmpRoleComboBox.addItem("Professor");
            
            }
            
            if(org.equals("ArtsCollege Organization")){
           
                System.out.println("org");
                orgEmpRoleComboBox.addItem("ArtsCollegeAdmin");
                orgEmpRoleComboBox.addItem("Professor");
            
            }
            
            if(org.equals("MedicalCollege Organization")){
           
                System.out.println("org");
                orgEmpRoleComboBox.addItem("MedicalCollegeAdmin");
                orgEmpRoleComboBox.addItem("Professor");
            
            }
            
        }
        
        if (this.enterprise instanceof HealthEnterprise) {
            
            if(org.equals("Hospital Organization")){
           
                orgEmpRoleComboBox.addItem("HospitalManager");
                orgEmpRoleComboBox.addItem("Doctor");
            
            }
            
            else if(org.equals("Pharma Organization")){
           
                orgEmpRoleComboBox.addItem("PharmaManager");
            
            }
            
        }
        
        if (this.enterprise instanceof TransportEnterprise) {
            
            if(org.equals("Bus Organization")){
           
                orgEmpRoleComboBox.addItem("BusManager");
                orgEmpRoleComboBox.addItem("LocoEngineer");
            
            }
            
            else if(org.equals("Train Organization")){
           
                orgEmpRoleComboBox.addItem("TrainManager");
                orgEmpRoleComboBox.addItem("LocoEngineer");
            
            }
            
        }
       
        if (this.enterprise instanceof LibraryEnterprise) {
            
            if(org.equals("ITS Organization")){
           
                orgEmpRoleComboBox.addItem("ITSManager");
                orgEmpRoleComboBox.addItem("ITSEmployee");
            
            }
            
            else if(org.equals("Books Organization")){
           
                orgEmpRoleComboBox.addItem("BooksManager");
            
            }
        }

    }

    public void populateOrganizationEmployeeComboBox() {
        
        orgTypeComboBox.removeAllItems();
        System.out.println(this.enterprise.getOrganizationDirectory().getOrganizationList());
        
        for (Organization organization : this.enterprise.getOrganizationDirectory().getOrganizationList()) {
            orgTypeComboBox.addItem(organization);
        }
    }
    
    private void populateEmployeeTable() {
        

        model1.setRowCount(0);
        for (Organization organization : this.enterprise.getOrganizationDirectory().getOrganizationList()) {
            for (UserAccount useraccount : organization.getUserAccountDirectory().getUserAccountList()) {
//                System.out.println(useraccount + "user");
//                System.out.println(useraccount.getEmployee().getOrg() + "org");
//                System.out.println(useraccount.getEmployee().getRole() + "role");
//                System.out.println(useraccount.getEmployee().getName() + "name");
//                System.out.println(useraccount.getUsername() + "username");
//                System.out.println(useraccount.getPassword() + "password");
//                
                Object[] objs = {useraccount.getEmployee().getOrg(), useraccount.getEmployee().getRole(),
                useraccount.getEmployee().getName(),useraccount.getEmployee().getMobile(), useraccount.getUsername(),useraccount.getPassword()};
                        
                model1.addRow(objs);
            }
        }

    }
                      

    public static boolean validUsername(String name) {
        Pattern pattern;
        Matcher matcher;
        String NAME_PATTERN = "^[A-Za-z\\s]+$";
        pattern = Pattern.compile(NAME_PATTERN);
        matcher = pattern.matcher(name);
        return matcher.matches();
    }
        

    public static boolean validPassword(String passwordValue) {
        Pattern pattern;
        Matcher matcher;
        String PASSWORD_PATTERN
                = "^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&+=~|?])(?=\\S+$).{8,}$";
        pattern = Pattern.compile(PASSWORD_PATTERN);
        matcher = pattern.matcher(passwordValue);
        return matcher.matches();
    }


}

