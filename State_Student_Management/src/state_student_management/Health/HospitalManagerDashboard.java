/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package state_student_management.Health;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Organization.Organization;
import Business.Role.DoctorRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LibraryRequest;
import Business.WorkQueue.TransportRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhaveshraja
 */
public class HospitalManagerDashboard extends javax.swing.JPanel {

    /**
     * Creates new form HospitalManagerDashboard
     */
    EcoSystem ecosystem;
    UserAccount userAccount;
    JPanel userProcessContainer;
    Organization organization;
 
    DefaultTableModel app;
    private DB4OUtil dB4OUtil;
    int row,col;
    
    public HospitalManagerDashboard(JPanel userProcessContainer, UserAccount userAccount, Organization organization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organization = organization;
        app = (DefaultTableModel) tblAppointments.getModel();
        populateAppointmentTable();
        displayDoctors();
        dB4OUtil = DB4OUtil.getInstance();
        txtRole.setText("Hospital Manager");
        txtRole.setEditable(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        txtRole = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblAppointments = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        btnAssignDoctor3 = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        comboDoctors = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(201, 3, 3));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SSM.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        btnLogout.setForeground(new java.awt.Color(138, 138, 138));
        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Role");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(43, 43, 43))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLogout))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jLabel22.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel22.setText("Appointments");

        tblAppointments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StudentID", "Student Name", "Priority", "Message", "Status", "Doctor", "Request Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAppointments.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAppointmentstblAppointmentsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblAppointments);

        jLabel17.setText("Assign Doctor");

        btnAssignDoctor3.setBackground(new java.awt.Color(52, 51, 242));
        btnAssignDoctor3.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignDoctor3.setText("Assign Doctor");
        btnAssignDoctor3.setBorder(null);
        btnAssignDoctor3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignDoctor3btnAssignDoctorActionPerformed(evt);
            }
        });

        btnAccept.setBackground(new java.awt.Color(0, 153, 0));
        btnAccept.setForeground(new java.awt.Color(255, 255, 255));
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnReject.setBackground(new java.awt.Color(255, 51, 51));
        btnReject.setForeground(new java.awt.Color(255, 255, 255));
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        comboDoctors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDoctorsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17)
                                    .addComponent(comboDoctors, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAssignDoctor3, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))))
                        .addContainerGap(45, Short.MAX_VALUE))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel22)
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboDoctors, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnAssignDoctor3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAccept, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnReject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.next(userProcessContainer);
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void tblAppointmentstblAppointmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAppointmentstblAppointmentsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblAppointmentstblAppointmentsMouseClicked

    private void btnAssignDoctor3btnAssignDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignDoctor3btnAssignDoctorActionPerformed
        // TODO add your handling code here:
        
        UserAccount doctor = (UserAccount) comboDoctors.getSelectedItem();
        
        if(doctor.isEmployeeBusy())
        {        
            JOptionPane.showMessageDialog(this, "Selected employee is busy please select other employee.", " Complaint not assigned", 1);
            return;
        }
        
        row = tblAppointments.getSelectedRow();
        String currentStatus = app.getValueAt(row, 4).toString();
        
        TransportRequest request = (TransportRequest) organization.getWorkQueue().getListOfWorkQueues().get(row);
        
        if(!currentStatus.equalsIgnoreCase("Request Accepted"))
        {

            JOptionPane.showMessageDialog(this, "Please accept complaint to assign", " Request not accepted", 1);
           return;
        }
        if(currentStatus.equalsIgnoreCase("Request Accepted"))
        {

            organization.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Assigned to Doctor");
            
          
            JOptionPane.showMessageDialog(this, "Request is Accepted and assigned to respective doctor", " Request is forwarded to employee", 1);
           
        }
        
        else if(currentStatus.equalsIgnoreCase("Request Declined")){
            
            JOptionPane.showMessageDialog(this, "This request is already declined earlier", " Request declined", 1);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Request is already Assigend to Employee", " Request Accepted", 1);
            
        }
        
//        UserAccount grievanceEmployeee = null;
//        for (UserAccount user : organization.getUserAccountDirectory().getUserAccountList()){
//                grievanceEmployeee = user;
//            }
        
        
        request.setReceiver(doctor);
        request.setStatus("Assigned to Doctor");
        doctor.getWorkQueue().addWorkRequest(request);
        populateAppointmentTable();
    }//GEN-LAST:event_btnAssignDoctor3btnAssignDoctorActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        row = tblAppointments.getSelectedRow();
        
        String currentStatus = app.getValueAt(row, 4).toString();
        
        if(currentStatus.equalsIgnoreCase("Request raised"))
        {

            organization.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Request Accepted");          
            JOptionPane.showMessageDialog(this, "Request is Accepted", " Request Accepted", 1);
           
        }
        
        else if(currentStatus.equalsIgnoreCase("Request Declined")){
            
            JOptionPane.showMessageDialog(this, "This request is already declined earlier", " Request declined", 1);        
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Request is already accepted", " Request Accepted", 1);
            
        }
        populateAppointmentTable();
       
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:
        
        row = tblAppointments.getSelectedRow();
        String currentStatus = app.getValueAt(row, 4).toString();
        if(currentStatus.equalsIgnoreCase("Request raised"))
        {
            userAccount.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Request Declined");
            
        }
         else if(currentStatus.equalsIgnoreCase("Request Declined")){
            
            JOptionPane.showMessageDialog(this, "This request is already declined earlier", " Request declined", 1);
            
            
        }
        else{
            JOptionPane.showMessageDialog(this, "Request is already accepted", " Request Accepted", 1);
            
        }
        populateAppointmentTable();
    }//GEN-LAST:event_btnRejectActionPerformed

    private void comboDoctorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDoctorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDoctorsActionPerformed
    
    private void populateAppointmentTable() {
      
        app.setRowCount(0);
  
        WorkQueue workQueue = organization.getWorkQueue();
        
        for(WorkRequest workRequest  : workQueue.getListOfWorkQueues() ){
            TransportRequest req = (TransportRequest) workRequest;
            
            String receiver = "Not yet Assigned"; 
            if( req.getReceiver() != null)
                receiver = req.getReceiver().getEmployee().getName();
            
            Date date = null;
       
            if(req.getStatus().equalsIgnoreCase("Assigned to Doctor")) {
                  date = req.getResolveDate();
            }
            
            System.out.println(req.getStatus());

            Object[] objs = {req.getSender().getStudent().getId(),req.getSender().getStudent().getName(),req.getPriority(), req.getMessage(), req.getStatus(), receiver, req.getRequestDate(),date};
            app.addRow(objs);
            
        }
    }
    
    private void displayDoctors() {
                         
         for(UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()){
                    if (userAccount.getRole() instanceof DoctorRole) comboDoctors.addItem(userAccount);
                              
         }
    }
    
         
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAssignDoctor3;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnReject;
    private javax.swing.JComboBox comboDoctors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tblAppointments;
    private javax.swing.JTextField txtRole;
    // End of variables declaration//GEN-END:variables
}
