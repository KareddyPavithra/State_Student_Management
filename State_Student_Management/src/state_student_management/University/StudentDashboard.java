/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package state_student_management.University;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import static Business.Enterprise.Enterprise.EnterpriseType.Health;
import static Business.Enterprise.Enterprise.EnterpriseType.Library;
import static Business.Enterprise.Enterprise.EnterpriseType.Transport;
import static Business.Enterprise.Enterprise.EnterpriseType.University;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LibraryRequest;
import Business.WorkQueue.TransportRequest;
<<<<<<< HEAD
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
=======
import java.awt.CardLayout;
>>>>>>> aa9bd5cd60ccd26bf7f49d3450ff9b0c6eafe39e
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhaveshraja
 */
public class StudentDashboard extends javax.swing.JPanel {

    /**
     * Creates new form StudentDashboard1
     */
    EcoSystem ecosystem;
    JPanel userProcessContainer;
    private UserAccount userAccount;
    Enterprise enterprise;
    Organization organization;
    Network network;
    DefaultTableModel courses,transport,library,hospital,encounter;
    
    private DB4OUtil dB4OUtil; 
    
    public StudentDashboard(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount userAccount, Enterprise enterprise, Network network,   Organization organization) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.enterprise = enterprise;
        this.network = network;
        this.userAccount = userAccount;
        
        //courses = (DefaultTableModel) tblCourseRequest.getModel();
        transport = (DefaultTableModel) tblStudentTransportRequests.getModel();
        library = (DefaultTableModel) tblStudentLibraryRequests.getModel();
        hospital = (DefaultTableModel) tblMedicalRequestsDirectory.getModel();
        encounter = (DefaultTableModel) tblEncounters.getModel();
        
        dB4OUtil = DB4OUtil.getInstance();
        txtRole.setText("Student");
        txtRole.setEditable(false);
        
        displayRequestType();
        displayTransRequestType();
<<<<<<< HEAD
        //populateTransportRequest();
        //populateLibraryRequest();
=======
        displayMedicalRequestType();
        displayCourseRequestType();
>>>>>>> aa9bd5cd60ccd26bf7f49d3450ff9b0c6eafe39e
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LibraryPane = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbCollege = new javax.swing.JComboBox();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtBackground = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        comboRequestPriority2 = new javax.swing.JComboBox<>();
        jLabel28 = new javax.swing.JLabel();
        txtMessage2 = new javax.swing.JTextField();
        btnRequestCourse = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblStudentTransportRequests1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRegisteredCourses = new javax.swing.JTable();
        btnDrop1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblStudentTransportRequests = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        comboRequestType1 = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        txtRequest1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        comboRequestPriority1 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        txtMessage1 = new javax.swing.JTextField();
        btnRequestTransport = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStudentLibraryRequests = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        comboRequestType = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnRequest = new javax.swing.JButton();
        txtMessage = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        comboRequestPriority = new javax.swing.JComboBox<>();
        txtRequest = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblMedicalRequestsDirectory = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        cbMedicalRequest = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        btnMedicalRequest = new javax.swing.JButton();
        txtMedicalMessage = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        comboMedicalRequestPriority = new javax.swing.JComboBox<>();
        txtMedicalTitle = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtRole = new javax.swing.JTextField();

        LibraryPane.setBackground(new java.awt.Color(255, 255, 255));
        LibraryPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LibraryPaneMouseClicked(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel7.setText("Course Requests");

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel9.setText("Course Request");

        cbCollege.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCollegeActionPerformed(evt);
            }
        });

        jLabel25.setText("Select College");

        jLabel26.setText("Course Name");

        jLabel27.setText("Request Priority");

        comboRequestPriority2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High", "Medium", "Low" }));

        jLabel28.setText("Message");

        txtMessage2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessage2ActionPerformed(evt);
            }
        });

        btnRequestCourse.setBackground(new java.awt.Color(52, 51, 242));
        btnRequestCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnRequestCourse.setText("Request");
        btnRequestCourse.setBorder(null);
        btnRequestCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestCourseActionPerformed(evt);
            }
        });

        tblStudentTransportRequests1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Course", "Educational Background", "Request Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblStudentTransportRequests1);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnRequestCourse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel25)
                        .addComponent(jLabel26)
                        .addComponent(cbCollege, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel28)
                        .addComponent(txtMessage2)
                        .addComponent(jLabel27)
                        .addComponent(comboRequestPriority2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(197, 197, 197))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCollege, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBackground, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboRequestPriority2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMessage2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRequestCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        LibraryPane.addTab("Course Request", jPanel4);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel6.setText("Registered Courses");

        tblRegisteredCourses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Course Name", "Credit Hours", "Description", "Professor", "Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRegisteredCourses);
        if (tblRegisteredCourses.getColumnModel().getColumnCount() > 0) {
            tblRegisteredCourses.getColumnModel().getColumn(3).setResizable(false);
        }

        btnDrop1.setBackground(new java.awt.Color(52, 51, 242));
        btnDrop1.setForeground(new java.awt.Color(255, 255, 255));
        btnDrop1.setText("Apply for Degree");
        btnDrop1.setBorder(null);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDrop1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 964, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(btnDrop1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        LibraryPane.addTab("Registered Courses", jPanel3);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        tblStudentTransportRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Request Type", "Request Name", "From Date", "To Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblStudentTransportRequests);
        if (tblStudentTransportRequests.getColumnModel().getColumnCount() > 0) {
            tblStudentTransportRequests.getColumnModel().getColumn(4).setHeaderValue("To Date");
        }

        jLabel15.setText("Request Type");

        comboRequestType1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRequestType1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Title");

        jLabel17.setText("Request Priority");

        comboRequestPriority1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High", "Medium", "Low" }));

        jLabel18.setText("Message");

        txtMessage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessage1ActionPerformed(evt);
            }
        });

        btnRequestTransport.setBackground(new java.awt.Color(52, 51, 242));
        btnRequestTransport.setForeground(new java.awt.Color(255, 255, 255));
        btnRequestTransport.setText("Request");
        btnRequestTransport.setBorder(null);
        btnRequestTransport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestTransportActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel19.setText("Transport Request");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRequestTransport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16)
                            .addComponent(comboRequestType1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18)
                            .addComponent(txtMessage1)
                            .addComponent(jLabel17)
                            .addComponent(comboRequestPriority1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtRequest1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addGap(32, 32, 32)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboRequestType1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRequest1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboRequestPriority1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMessage1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRequestTransport, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
        );

        LibraryPane.addTab("Transport", jPanel6);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tblStudentLibraryRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Request Type", "Request Name", "From Date", "To Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblStudentLibraryRequests);

        jLabel10.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel10.setText("Books & Services Request");

        comboRequestType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboRequestTypeActionPerformed(evt);
            }
        });

        jLabel11.setText("Request Type");

        jLabel12.setText("Request Title");

        jLabel13.setText("Message");

        btnRequest.setBackground(new java.awt.Color(52, 51, 242));
        btnRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnRequest.setText("Request");
        btnRequest.setBorder(null);
        btnRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestActionPerformed(evt);
            }
        });

        txtMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMessageActionPerformed(evt);
            }
        });

        jLabel14.setText("Request Priority");

        comboRequestPriority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High", "Medium", "Low" }));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(comboRequestType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13)
                    .addComponent(txtMessage)
                    .addComponent(jLabel14)
                    .addComponent(comboRequestPriority, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtRequest))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel10)
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboRequestType, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboRequestPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        LibraryPane.addTab("Library", jPanel5);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        tblMedicalRequestsDirectory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Request Type", "Request Name", "From Date", "To Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblMedicalRequestsDirectory);

        jLabel20.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel20.setText("Medical Request");

        cbMedicalRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMedicalRequestActionPerformed(evt);
            }
        });

        jLabel21.setText("Request Type");

        jLabel22.setText("Title");

        jLabel23.setText("Message");

        btnMedicalRequest.setBackground(new java.awt.Color(52, 51, 242));
        btnMedicalRequest.setForeground(new java.awt.Color(255, 255, 255));
        btnMedicalRequest.setText("Request");
        btnMedicalRequest.setBorder(null);
        btnMedicalRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMedicalRequestActionPerformed(evt);
            }
        });

        txtMedicalMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMedicalMessageActionPerformed(evt);
            }
        });

        jLabel24.setText("Request Priority");

        comboMedicalRequestPriority.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "High", "Medium", "Low" }));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMedicalRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtMedicalMessage)
                    .addComponent(txtMedicalTitle)
                    .addComponent(comboMedicalRequestPriority, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24))
                        .addGap(0, 223, Short.MAX_VALUE))
                    .addComponent(cbMedicalRequest, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel20)
                .addGap(35, 35, 35)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbMedicalRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMedicalTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboMedicalRequestPriority, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMedicalMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(btnMedicalRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        LibraryPane.addTab("Hospital", jPanel7);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel8.setText("Medical Encounters");

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Date", "Blood Pressure", "Sugar", "Pulse", "Temperature"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEncounters.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEncountersMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tblEncounters);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 1074, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        LibraryPane.addTab("Encounters", jPanel8);

        jPanel2.setBackground(new java.awt.Color(201, 3, 3));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SSM.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        btnLogout.setForeground(new java.awt.Color(138, 138, 138));
        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Role");

        txtRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRoleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(198, 198, 198))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLogout)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(LibraryPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LibraryPane)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.next(userProcessContainer);
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void txtMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessageActionPerformed

    private void btnRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestActionPerformed
        // TODO add your handling code here:
        String requestType = comboRequestType.getSelectedItem().toString();
        String chooseRequest = txtRequest.getText();
        String priority = comboRequestPriority.getSelectedItem().toString();
        String message = txtMessage.getText();
        
        if(requestType.isEmpty() || chooseRequest.isEmpty() || priority.isEmpty() || message.isEmpty())
         {
             
            JOptionPane.showMessageDialog(this, "One or More fields are empty !!", "Empty Fields", 2);
            return;       
         }

        LibraryRequest libReq = new LibraryRequest();
        libReq.setMessage(message);
        libReq.setSender(userAccount);
        libReq.setPriority(priority);
        libReq.setRequest(chooseRequest);
        libReq.setOrganizationType(requestType);
        libReq.setStatus("Request raised");
        libReq.setRequestType("Request");
        
        userAccount.getWorkQueue().addWorkRequest(libReq);
        
        Organization org = (Organization) comboRequestType.getSelectedItem();
        
        System.out.println(org);       
        System.out.println(libReq);
        
        org.getWorkQueue().addWorkRequest(libReq);
        
        JOptionPane.showMessageDialog(this, "Request placed successfully !!", "Request", 1);

        comboRequestType.setSelectedIndex(0);
        comboRequestPriority.setSelectedIndex(0);
        txtRequest.setText("");
        txtMessage.setText("");
        
        populateLibraryRequest();

        
    }//GEN-LAST:event_btnRequestActionPerformed

    private void comboRequestTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRequestTypeActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_comboRequestTypeActionPerformed

    private void comboRequestType1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboRequestType1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboRequestType1ActionPerformed

    private void txtMessage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessage1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessage1ActionPerformed

    private void btnRequestTransportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestTransportActionPerformed
        // TODO add your handling code here:
        String requestTypeT = comboRequestType1.getSelectedItem().toString();
        String requestT = txtRequest1.getText();
        String priorityT = comboRequestPriority1.getSelectedItem().toString();
        String messageT = txtMessage1.getText();
        
        if(requestTypeT.isEmpty() || requestT.isEmpty() || priorityT.isEmpty() || messageT.isEmpty())
         {
             
            JOptionPane.showMessageDialog(this, "One or More fields are empty !!", "Empty Fields", 2);
            return;       
         }

        TransportRequest trans = new TransportRequest();
        trans.setMessage(messageT);
        trans.setSender(userAccount);
        trans.setPriority(priorityT);
        trans.setRequest(requestT);
        trans.setOrganizationType(requestTypeT);
        trans.setStatus("Request raised");
        trans.setRequestType("Request");
        
        userAccount.getWorkQueue().addWorkRequest(trans);
        
        Organization org = (Organization) comboRequestType1.getSelectedItem();
        
        System.out.println(org);       
        System.out.println(trans);
        
        org.getWorkQueue().addWorkRequest(trans);
        
        JOptionPane.showMessageDialog(this, "Request placed successfully !!", "Request", 1);

        

        comboRequestType1.setSelectedIndex(-1);
        comboRequestPriority1.setSelectedIndex(-1);
        txtRequest1.setText("");
        txtMessage1.setText("");
        
        populateTransportRequest();

        
        
    }//GEN-LAST:event_btnRequestTransportActionPerformed

    private void cbMedicalRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMedicalRequestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMedicalRequestActionPerformed

    private void btnMedicalRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMedicalRequestActionPerformed
        // TODO add your handling code here:
        String requestTypeT = cbMedicalRequest.getSelectedItem().toString();
        String requestT = txtMedicalTitle.getText();
        String priorityT = comboMedicalRequestPriority.getSelectedItem().toString();
        String messageT = txtMedicalMessage.getText();
        
        if(requestTypeT.isEmpty() || requestT.isEmpty() || priorityT.isEmpty() || messageT.isEmpty())
         {
             
            JOptionPane.showMessageDialog(this, "One or More fields are empty !!", "Empty Fields", 2);
            return;       
         }

        TransportRequest trans = new TransportRequest();
        trans.setMessage(messageT);
        trans.setSender(userAccount);
        trans.setPriority(priorityT);
        trans.setRequest(requestT);
        trans.setOrganizationType(requestTypeT);
        trans.setStatus("Request raised");
        trans.setRequestType("Request");
        
        userAccount.getWorkQueue().addWorkRequest(trans);
        
        Organization org = (Organization) cbMedicalRequest.getSelectedItem();
        
        System.out.println(org);       
        System.out.println(trans);
        
        org.getWorkQueue().addWorkRequest(trans);
        
        JOptionPane.showMessageDialog(this, "Request placed successfully !!", "Request", 1);

        cbMedicalRequest.setSelectedIndex(-1);
        comboMedicalRequestPriority.setSelectedIndex(-1);
        txtRequest1.setText("");
        txtMessage1.setText("");
        
    }//GEN-LAST:event_btnMedicalRequestActionPerformed

    private void txtMedicalMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMedicalMessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMedicalMessageActionPerformed

    private void tblEncountersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEncountersMouseClicked
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();

        String patientName = model.getValueAt(tblEncounters.getSelectedRow(), 0).toString();
        String patientBp = model.getValueAt(tblEncounters.getSelectedRow(), 1).toString();
        String patientSugar = model.getValueAt(tblEncounters.getSelectedRow(), 2).toString();
        String patientPulse = model.getValueAt(tblEncounters.getSelectedRow(), 3).toString();
        String patientTemperature = model.getValueAt(tblEncounters.getSelectedRow(), 4).toString();

        //        txtPatientName.setText(patientName);
        //        txtPatientBP.setText(patientBp);
        //        txtPatientSugar.setText(patientSugar);
        //        txtPatientPulse.setText(patientPulse);
        //        txtPatientTemperature.setText(patientTemperature);
    }//GEN-LAST:event_tblEncountersMouseClicked

    private void txtRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRoleActionPerformed

    private void LibraryPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LibraryPaneMouseClicked
        // TODO add your handling code here:
        //displayRequestType();
//        displayTransRequestType();
        //displayMedicalRequestType();
    }//GEN-LAST:event_LibraryPaneMouseClicked

    private void cbCollegeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCollegeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCollegeActionPerformed

    private void txtMessage2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMessage2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMessage2ActionPerformed

    private void btnRequestCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestCourseActionPerformed
        // TODO add your handling code here:
        String requestTypeT = cbCollege.getSelectedItem().toString();
        String requestT = txtBackground.getText();
        String priorityT = comboRequestPriority2.getSelectedItem().toString();
        String messageT = txtMessage2.getText();
        
        if(requestTypeT.isEmpty() || requestT.isEmpty() || priorityT.isEmpty() || messageT.isEmpty())
         {
             
            JOptionPane.showMessageDialog(this, "One or More fields are empty !!", "Empty Fields", 2);
            return;       
         }

        TransportRequest trans = new TransportRequest();
        trans.setMessage(messageT);
        trans.setSender(userAccount);
        trans.setPriority(priorityT);
        trans.setRequest(requestT);
        trans.setOrganizationType(requestTypeT);
        trans.setStatus("Request raised");
        trans.setRequestType("Request");
        
        userAccount.getWorkQueue().addWorkRequest(trans);
        
        Organization org = (Organization) cbCollege.getSelectedItem();
        
        System.out.println(org);       
        System.out.println(trans);
        
        org.getWorkQueue().addWorkRequest(trans);
        
        JOptionPane.showMessageDialog(this, "Request placed successfully !!", "Request", 1);

        cbMedicalRequest.setSelectedIndex(-1);
        comboMedicalRequestPriority.setSelectedIndex(-1);
        txtRequest1.setText("");
        txtMessage1.setText("");
    }//GEN-LAST:event_btnRequestCourseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane LibraryPane;
    private javax.swing.JButton btnDrop1;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnMedicalRequest;
    private javax.swing.JButton btnRequest;
    private javax.swing.JButton btnRequestCourse;
    private javax.swing.JButton btnRequestTransport;
    private javax.swing.JComboBox cbCollege;
    private javax.swing.JComboBox cbMedicalRequest;
    private javax.swing.JComboBox<String> comboMedicalRequestPriority;
    private javax.swing.JComboBox<String> comboRequestPriority;
    private javax.swing.JComboBox<String> comboRequestPriority1;
    private javax.swing.JComboBox<String> comboRequestPriority2;
    private javax.swing.JComboBox comboRequestType;
    private javax.swing.JComboBox comboRequestType1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTable tblMedicalRequestsDirectory;
    private javax.swing.JTable tblRegisteredCourses;
    private javax.swing.JTable tblStudentLibraryRequests;
    private javax.swing.JTable tblStudentTransportRequests;
    private javax.swing.JTable tblStudentTransportRequests1;
    private javax.swing.JTextField txtBackground;
    private javax.swing.JTextField txtMedicalMessage;
    private javax.swing.JTextField txtMedicalTitle;
    private javax.swing.JTextField txtMessage;
    private javax.swing.JTextField txtMessage1;
    private javax.swing.JTextField txtMessage2;
    private javax.swing.JTextField txtRequest;
    private javax.swing.JTextField txtRequest1;
    private javax.swing.JTextField txtRole;
    // End of variables declaration//GEN-END:variables

 private void displayRequestType() {
      
        System.out.println(network);
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprise.getEnterpriseType().equals(Library)){
                for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
                    System.out.println(org);
                    comboRequestType.addItem(org);
            }
            }
        }
    }
 
 private void displayTransRequestType() {
      
        System.out.println(network);
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprise.getEnterpriseType().equals(Transport)){
                for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList())
                    comboRequestType1.addItem(org);
            }
   
        }
    }
 
 private void displayMedicalRequestType() {
      
        System.out.println(network);
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprise.getEnterpriseType().equals(Health)){
                for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList())
                    cbMedicalRequest.addItem(org);
            }
   
        }
    }
 
<<<<<<< HEAD
  private void populateTransportRequest(){
     
     transport.setRowCount(0);
       WorkQueue workQueue = userAccount.getWorkQueue();
        
        for(WorkRequest workRequest  : workQueue.getListOfWorkQueues() ){
            TransportRequest req = (TransportRequest) workRequest;
                      
            Date date = null;
            if(req.getStatus().equalsIgnoreCase("Request Accepted")) {
                  date = req.getResolveDate();
            }

            Object[] objs = {req.getSender().getStudent().getName(),req.getPriority(), req.getMessage(), req.getStatus(),req.getRequestDate(),date};
            transport.addRow(objs);
            
        }
    }
  
  private void populateLibraryRequest(){
     
     library.setRowCount(0);
       WorkQueue workQueue = userAccount.getWorkQueue();
        
        for(WorkRequest workRequest  : workQueue.getListOfWorkQueues() ){
            LibraryRequest req = (LibraryRequest) workRequest;
                      
            Date date = null;
            if(req.getStatus().equalsIgnoreCase("Request Accepted")) {
                  date = req.getResolveDate();
            }

            Object[] objs = {req.getSender().getStudent().getName(),req.getPriority(), req.getMessage(), req.getStatus(),req.getRequestDate(),date};
            library.addRow(objs);
            
=======
 private void displayCourseRequestType() {
      
        System.out.println(network);
        for(Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()){
            if(enterprise.getEnterpriseType().equals(University)){
                for(Organization org : enterprise.getOrganizationDirectory().getOrganizationList())
                    cbCollege.addItem(org);
            }
   
>>>>>>> aa9bd5cd60ccd26bf7f49d3450ff9b0c6eafe39e
        }
    }
}



