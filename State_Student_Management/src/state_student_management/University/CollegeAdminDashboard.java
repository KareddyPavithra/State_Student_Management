/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package state_student_management.University;

import Business.Organization.CourseDirectory;
import Business.Organization.Course;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.Role.DoctorRole;
import Business.Role.ProfessorRole;
import Business.Student.Student;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.TransportRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bhaveshraja
 */
public class CollegeAdminDashboard extends javax.swing.JPanel {

    /**
     * Creates new form CollegeAdminDashboard1
     */
    EcoSystem ecosystem;
    Organization organization;
    UserAccount userAccount;
    JPanel userProcessContainer;
    Network network;
    //Courses courses;
    //CoursesDirectory coursesDirectory;
    private Enterprise enterprise;
    //private OrganizationDirectory organizationDirectory;
    //ArrayList<Courses> coursesList = new ArrayList<>();
    DefaultTableModel crse1,sdnt1,prof1, req;
    int row, col;
    private DB4OUtil dB4OUtil; 
    
    public CollegeAdminDashboard(JPanel userProcessContainer, EcoSystem ecosystem, Organization organization, Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem; 
        this.organization = organization;
        this.network = network;

        crse1 = (DefaultTableModel) tblCourses1.getModel();
        sdnt1 = (DefaultTableModel) tblAdmissionApplications.getModel();
        req = (DefaultTableModel) tblCourseRequests.getModel();

        dB4OUtil = DB4OUtil.getInstance();

        populateCoursesTable();
        populateCourseRequestTable();
        displayProfessors();
        
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        txtRole = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ProfessorDirectoryPane = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCourses1 = new javax.swing.JTable();
        btnDeleteCourse = new javax.swing.JButton();
        btnViewCourse = new javax.swing.JButton();
        btnAddCourse = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        txtCourse = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtSeats = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtCreditHours = new javax.swing.JTextField();
        btnUpdateCourse = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblCourseRequests = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        btnAssignProfessor = new javax.swing.JButton();
        btnAccept = new javax.swing.JButton();
        btnReject = new javax.swing.JButton();
        comboProfessors = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblAdmissionApplications = new javax.swing.JTable();

        jPanel2.setBackground(new java.awt.Color(201, 3, 3));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/SSM.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        btnLogout.setForeground(new java.awt.Color(138, 138, 138));
        btnLogout.setText("Log Out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Role");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnLogout)
                .addGap(105, 105, 105))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnLogout))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        ProfessorDirectoryPane.setBackground(new java.awt.Color(255, 255, 255));
        ProfessorDirectoryPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProfessorDirectoryPaneMouseClicked(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel8.setText("Add Courses");

        tblCourses1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Credit Hours", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCourses1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCourses1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblCourses1);

        btnDeleteCourse.setBackground(new java.awt.Color(245, 1, 1));
        btnDeleteCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteCourse.setText("Delete");
        btnDeleteCourse.setBorder(null);
        btnDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCourseActionPerformed(evt);
            }
        });

        btnViewCourse.setBackground(new java.awt.Color(52, 51, 242));
        btnViewCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnViewCourse.setText("View");
        btnViewCourse.setBorder(null);
        btnViewCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCourseActionPerformed(evt);
            }
        });

        btnAddCourse.setBackground(new java.awt.Color(201, 3, 3));
        btnAddCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnAddCourse.setText("Add Course");
        btnAddCourse.setBorder(null);
        btnAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCourseActionPerformed(evt);
            }
        });

        jLabel22.setText("Name");

        jLabel21.setText("Description");

        jLabel24.setText("Credit Hours");

        txtCreditHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreditHoursActionPerformed(evt);
            }
        });

        btnUpdateCourse.setBackground(new java.awt.Color(52, 51, 242));
        btnUpdateCourse.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateCourse.setText("Update");
        btnUpdateCourse.setBorder(null);
        btnUpdateCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCourseActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel9.setText("Course Directory");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDeleteCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel24)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCreditHours, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel21)
                            .addComponent(btnAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnViewCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnUpdateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(44, 44, 44))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(btnViewCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCreditHours, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSeats, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addComponent(btnDeleteCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        ProfessorDirectoryPane.addTab("Courses", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jLabel23.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel23.setText("Requests");

        tblCourseRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StudentID", "Student Name", "Priority", "Message", "Status", "Professsor", "Request Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCourseRequests.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCourseRequeststblAppointmentsMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblCourseRequests);
        if (tblCourseRequests.getColumnModel().getColumnCount() > 0) {
            tblCourseRequests.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel17.setText("Assign Professor");

        btnAssignProfessor.setBackground(new java.awt.Color(52, 51, 242));
        btnAssignProfessor.setForeground(new java.awt.Color(255, 255, 255));
        btnAssignProfessor.setText("Assign Professor");
        btnAssignProfessor.setBorder(null);
        btnAssignProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignProfessorbtnAssignDoctorActionPerformed(evt);
            }
        });

        btnAccept.setBackground(new java.awt.Color(0, 153, 0));
        btnAccept.setForeground(new java.awt.Color(255, 255, 255));
        btnAccept.setText("Accept");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnReject.setBackground(new java.awt.Color(255, 51, 51));
        btnReject.setForeground(new java.awt.Color(255, 255, 255));
        btnReject.setText("Reject");
        btnReject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejectActionPerformed(evt);
            }
        });

        comboProfessors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboProfessorsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnAccept, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReject, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 736, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel17)
                                    .addComponent(comboProfessors, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAssignProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(105, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel23)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboProfessors, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnAssignProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAccept, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnReject, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ProfessorDirectoryPane.addTab("Course Requests", jPanel6);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 1, 20)); // NOI18N
        jLabel18.setText("Admission Applications");

        tblAdmissionApplications.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Email", "Gender", "Age", "GRE", "IELTS", "Address", "University", "College"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tblAdmissionApplications);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 964, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel18)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(130, Short.MAX_VALUE))
        );

        ProfessorDirectoryPane.addTab("Admissions Applications", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(ProfessorDirectoryPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProfessorDirectoryPane))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnViewCourseActionPerformed

    private void txtCreditHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreditHoursActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreditHoursActionPerformed

    private void btnDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCourseActionPerformed
        // TODO add your handling code here:
        crse1.removeRow(row);
        
        txtCourse.setText("");
        txtSeats.setText("");
        txtCreditHours.setText("");
        
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_btnDeleteCourseActionPerformed

    private void btnUpdateCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateCourseActionPerformed

    private void btnAddCollegeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCollegeActionPerformed
        // TODO add your handling code here:
//        String nameclg1 = txtCollegeName.getText().trim();
//        String offemailclg1 = txtClgOfficialEmail.getText().trim();
//        String offtelclg1 = txtClgOfficialTelephone.getText().trim();
//        //University university  = (university) jComboUniversities1.getSelectedItem();
//                          
//        
//        
//        
//        Object[] data = {nameclg1, offemailclg1, offtelclg1};
//        cl1.addRow(data);
//        
//
//        txtCollegeName.setText("");
//        txtClgOfficialEmail.setText("");
//        txtClgOfficialTelephone.setText("");
//        
//        dB4OUtil.storeSystem(ecosystem);
                                                   
    //} 
    }//GEN-LAST:event_btnAddCollegeActionPerformed

    private void tblColleges1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblColleges1MouseClicked
        // TODO add your handling code here:
//        DefaultTableModel model = (DefaultTableModel) tblColleges1.getModel();
//
//        String nameclg1 = model.getValueAt(tblColleges1.getSelectedRow(), 0).toString();
//        String offemailclg1 = model.getValueAt(tblColleges1.getSelectedRow(), 1).toString();
//        String offtelclg1 = model.getValueAt(tblColleges1.getSelectedRow(), 2).toString();
//       
//
//        txtCollegeName.setText(nameclg1);
//        txtClgOfficialEmail.setText(offemailclg1);
//        txtClgOfficialTelephone.setText(offtelclg1);
        
    }//GEN-LAST:event_tblColleges1MouseClicked


    private void btnAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCourseActionPerformed
        // TODO add your handling code here:
       String nameCourse1 = txtCourse.getText().trim();
       String seatsCourse1 = txtSeats.getText().trim();
       String creditHours1 = txtCreditHours.getText().trim();
       
       int seats = Integer.parseInt(seatsCourse1);
       int credits = Integer.parseInt(creditHours1);
       Course course = new Course(nameCourse1, seats,credits);
       
       System.out.println(course.getCourseName());
       System.out.println(course.getSeats());
       System.out.println(course.getCreditHours());

       System.out.println(organization.getName());
       System.out.println(organization.courseDirectory);
       
       organization.getCourseDirectory().addCourse(course);
       
       System.out.println(organization.getCourseDirectory().getCoursesList());

       populateCoursesTable();
        //Object[] data = {nameCourse1, seatsCourse1, creditHours1};
        //crse1.addRow(data);
        

        txtCourse.setText("");
        txtSeats.setText("");
        txtCreditHours.setText("");

        
        dB4OUtil.storeSystem(ecosystem);
                                                   
    }//GEN-LAST:event_btnAddCourseActionPerformed

    private void tblCourses1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCourses1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblCourses1.getModel();

        String nameCourse1 = model.getValueAt(tblCourses1.getSelectedRow(), 0).toString();
        String seatsCourse1 = model.getValueAt(tblCourses1.getSelectedRow(), 1).toString();
        String creditHours1 = model.getValueAt(tblCourses1.getSelectedRow(), 2).toString();
        String price1 = model.getValueAt(tblCourses1.getSelectedRow(), 3).toString();
        

        txtCourse.setText(nameCourse1);
        txtSeats.setText(seatsCourse1);
        txtCreditHours.setText(creditHours1);
        //txtPrice.setText(price1);
        
    }//GEN-LAST:event_tblCourses1MouseClicked

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.remove(this);
        layout.next(userProcessContainer);
        dB4OUtil.storeSystem(ecosystem);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void ProfessorDirectoryPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfessorDirectoryPaneMouseClicked
        // TODO add your handling code here:
        populateAdmissionTable();
    }//GEN-LAST:event_ProfessorDirectoryPaneMouseClicked

    private void tblCourseRequeststblAppointmentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCourseRequeststblAppointmentsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCourseRequeststblAppointmentsMouseClicked

    private void btnAssignProfessorbtnAssignDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignProfessorbtnAssignDoctorActionPerformed
        // TODO add your handling code here:

        UserAccount professor = (UserAccount) comboProfessors.getSelectedItem();

        if(professor.isEmployeeBusy())
        {
            JOptionPane.showMessageDialog(this, "Selected employee is busy please select other employee.", " Complaint not assigned", 1);
            return;
        }

        row = tblCourseRequests.getSelectedRow();
        String currentStatus = req.getValueAt(row, 4).toString();

        TransportRequest request = (TransportRequest) organization.getWorkQueue().getListOfWorkQueues().get(row);

        if(!currentStatus.equalsIgnoreCase("Request Accepted"))
        {

            JOptionPane.showMessageDialog(this, "Please accept complaint to assign", " Request not accepted", 1);
            return;
        }
        if(currentStatus.equalsIgnoreCase("Request Accepted"))
        {

            organization.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Assigned to Professor");

            JOptionPane.showMessageDialog(this, "Request is Accepted and assigned to respective Professor", " Request is forwarded to employee", 1);

        }

        else if(currentStatus.equalsIgnoreCase("Request Declined")){

            JOptionPane.showMessageDialog(this, "This request is already declined earlier", " Request declined", 1);

        }
        else{
            JOptionPane.showMessageDialog(this, "Request is already Assigend to Employee", " Request Accepted", 1);

        }

        //        UserAccount grievanceEmployeee = null;
        //        for (UserAccount user : organization.getUserAccountDirectory().getUserAccountList()){
            //                grievanceEmployeee = user;
            //            }

        request.setReceiver(professor);
        request.setStatus("Assigned to Professor");
        professor.getWorkQueue().addWorkRequest(request);
        populateCourseRequestTable();
    }//GEN-LAST:event_btnAssignProfessorbtnAssignDoctorActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
        row = tblCourseRequests.getSelectedRow();

        String currentStatus = req.getValueAt(row, 4).toString();

        if(currentStatus.equalsIgnoreCase("Request raised"))
        {

            organization.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Request Accepted");
            JOptionPane.showMessageDialog(this, "Request is Accepted", " Request Accepted", 1);

        }

        else if(currentStatus.equalsIgnoreCase("Request Declined")){

            JOptionPane.showMessageDialog(this, "This request is already declined earlier", " Request declined", 1);

        }
        else{
            JOptionPane.showMessageDialog(this, "Request is already accepted", " Request Accepted", 1);

        }
        populateCourseRequestTable();

    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnRejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejectActionPerformed
        // TODO add your handling code here:

        row = tblCourseRequests.getSelectedRow();
        String currentStatus = req.getValueAt(row, 4).toString();
        if(currentStatus.equalsIgnoreCase("Request raised"))
        {
            userAccount.getWorkQueue().getListOfWorkQueues().get(row).setStatus("Request Declined");

        }
        else if(currentStatus.equalsIgnoreCase("Request Declined")){

            JOptionPane.showMessageDialog(this, "This request is already declined earlier", " Request declined", 1);

        }
        else{
            JOptionPane.showMessageDialog(this, "Request is already accepted", " Request Accepted", 1);

        }
        populateCourseRequestTable();
    }//GEN-LAST:event_btnRejectActionPerformed

    private void comboProfessorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboProfessorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboProfessorsActionPerformed

    public void populateAdmissionTable() {
        sdnt1.setRowCount(0);

        for (Student student : this.network.getStudentDirectory().getStudentList()) {
            
            Object obj[] = {student.getId(), student.getName(), student.getEmailId(),student.getGender(),student.getAge(),student.getGRE(),student.getIELTS(),student.getUserName(),student.getPassword(),student.getMobile()};        
            sdnt1.addRow(obj);
        }
    }
    
    private void displayProfessors() {
                         
         for(UserAccount userAccount : organization.getUserAccountDirectory().getUserAccountList()){
                    if (userAccount.getRole() instanceof ProfessorRole) comboProfessors.addItem(userAccount);
                              
         }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane ProfessorDirectoryPane;
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAddCourse;
    private javax.swing.JButton btnAssignProfessor;
    private javax.swing.JButton btnDeleteCourse;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnReject;
    private javax.swing.JButton btnUpdateCourse;
    private javax.swing.JButton btnViewCourse;
    private javax.swing.JComboBox comboProfessors;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable tblAdmissionApplications;
    private javax.swing.JTable tblCourseRequests;
    private javax.swing.JTable tblCourses1;
    private javax.swing.JTextField txtCourse;
    private javax.swing.JTextField txtCreditHours;
    private javax.swing.JTextField txtRole;
    private javax.swing.JTextField txtSeats;
    // End of variables declaration//GEN-END:variables

     private void populateCoursesTable() {
       
        crse1.setRowCount(0);
        
        System.out.println(organization.getCourseDirectory().getCoursesList());
        for (Course courses : this.organization.getCourseDirectory().getCoursesList()) {
            
               Object[] objs = {courses.getCourseName(),courses.getCreditHours(),courses.getSeats()};                       
               crse1.addRow(objs);
           }
        }
     
     private void populateCourseRequestTable() {
       
        req.setRowCount(0);
        
        WorkQueue workQueue = organization.getWorkQueue();
        
        for(WorkRequest workRequest  : workQueue.getListOfWorkQueues() ){
            TransportRequest request = (TransportRequest) workRequest;
            
            String receiver = "Not yet Assigned"; 
            if( request.getReceiver() != null)
                receiver = request.getReceiver().getEmployee().getName();
            
            Date date = null;
       
            if(request.getStatus().equalsIgnoreCase("Assigned to Doctor")) {
                  date = request.getResolveDate();
            }
            
            System.out.println(request.getStatus());

            Object[] objs = {request.getSender().getStudent().getId(),request.getSender().getStudent().getName(),request.getPriority(), request.getMessage(), request.getStatus(), receiver, request.getRequestDate(),date};
            req.addRow(objs);
            
        }
        }

}



